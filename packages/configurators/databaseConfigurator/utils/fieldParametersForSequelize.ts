import { FieldType } from "@decorators/models/_types";
import { Model } from "@models/Model";

export type SequelizeTableParams = {
  type: any;
  primaryKey: boolean;
  allowNull: boolean;
  _autoGenerated: boolean;
  fieldName: string;
  unique: boolean;
  _modelAttribute: boolean;
  onDelete?: "SET NULL";
  onUpdate?: "CASCADE";
  field: string;
  references?: {
    model: string;
    key: string;
  };
};

type EditTableParams = {
  type: FieldType;
  primaryKey: boolean;
  allowNull: boolean;
  unique: boolean;
  fieldName: string;
  references?: {
    model: string;
    key: string;
  };
};

export function fieldParametersForSequelize(
  fields: SequelizeTableParams[]
): EditTableParams[] {
  let editFields: EditTableParams[];

  editFields = fields.map((f) => ({
    primaryKey: f.primaryKey,
    fieldName: f.fieldName,
    type: f.type.key,
    unique: f.unique,
    allowNull: f.allowNull,
    references: f.references,
  }));

  return editFields;
}
